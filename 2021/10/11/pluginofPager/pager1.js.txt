//分页器
var Pager = function () {

}
Pager.prototype = {
    LIMITS_FIRST: [],
	MAX_DISPLAY: 0,
	COUNT: 0,
	renderPagerHtml: function (el, para) {
		var pagerhtml = '<div class="row" style="margin-top:10px;">' +
			'<div class="col-sm-4">' +
			'<div class="dataTables_info" id="table_info" role="alert" aria-live="polite" aria-relevant="all"></div>' +
			'</div>' +
			'<div class="col-sm-8">' +
			'<div class="dataTables_paginate paging_bootstrap" id="simpledatatable_paginate">' +
			'<ul class="pagination" style="float:right;">' +
			'</ul>' +
			'</div>' +
			'</div>' +
			'</div>';
		$(el).html(pagerhtml);

		var count = para.count;
		var start = para.start;
		var LIMIT = para.limit;
		var MAX_PAGENUM = para.max_display;
		//加载分页概览
		var pagenum = parseInt((count - 1) / LIMIT) + 1;//总页数
		var curpage = parseInt(start / LIMIT) + 1;//当前页数
		$(el + ' #table_info').html('' + count + '条记录 共' + pagenum + '页');
		//加载分页码
		if (curpage == 1) { var temp = '<li class="prev disabled" value="prev"><a>上一页</a></li>'; } else { var temp = '<li class="prev leftright" value="prev"><a>上一页</a></li>'; }
		if (pagenum <= MAX_PAGENUM) {
			//加载全部页码
			for (var i = 0; i < pagenum; i++) {
				if ((i + 1) == curpage) {
					temp += '<li class="active pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
				}
				else {
					temp += '<li class="pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
				}
			}

		}
		else if (pagenum > MAX_PAGENUM) {
			if (curpage < MAX_PAGENUM) {
				//当前页小于最大显示
				for (var i = 0; i < MAX_PAGENUM; i++) {
					if ((i + 1) == curpage) {
						temp += '<li class="active pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
					}
					else {
						temp += '<li class="pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
					}

				}
				if (curpage <= pagenum - 2) {//最后一页追加“...”代表省略的页
					temp += "<li><a>...</a></li>";
				}
			}
			else if (curpage >= MAX_PAGENUM) {//当前页大于最大值
				for (var j = 0; j < 2; j++) {//1,2页码始终显示
					temp += '<li class="pagenum" value="' + (j + 1) + '"><a>' + (j + 1) + '</a></li>';
				}
				temp += "<li><a>...</a></li>";//2页码后面用...代替部分未显示的页码
				if (curpage + 1 == pagenum) {
					for (var i = curpage - 1; i < pagenum; i++) {
						if ((i + 1) == curpage) {
							temp += '<li class="active pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
						}
						else {
							temp += '<li class="pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
						}
					}

				}
				else if (curpage == pagenum) {
					for (var i = curpage - 2; i < pagenum; i++) {
						if ((i + 1) == curpage) {
							temp += '<li class="active pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
						}
						else {
							temp += '<li class="pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
						}
					}

				}
				else {
					for (var i = curpage - 1; i < curpage + 1; i++) {
						if ((i + 1) == curpage) {
							temp += '<li class="active pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
						}
						else {
							temp += '<li class="pagenum" value="' + (i + 1) + '"><a>' + (i + 1) + '</a></li>'
						}
					}
					temp += "<li><a>...</a></li>";

				}
			}

		}
		if (curpage == pagenum) { temp += '<li class="next disabled" value="next"><a>下一页</a></li>'; } else { temp += '<li class="next leftright" value="next"><a>下一页</a></li>'; }
		$(el + ' .pagination').html(temp);



	},
	/**
	 * 分页器：总条数、总页数、每页数、跳转输入、页码数
	 * @param el 例如：'#gatelist_page'
	 * @param para  例如：{ 'count': 100, 'start': 0, 'limit': 10, 'max_display': 5 }
	 * @param callback  例如： function (curpage: number, limit: number, start: number){ // 实现数据表格数据的改变 }
	 */
	render: function (el, para, callback) {
		var temp = '<div class="pager layui-box layui-laypage layui-laypage-default">' +
			'<div class="layui-col-md3"><span class="layui-laypage-count left"> {{count}} 条记录</span> <span class="layui-laypage-count left">共 {{pagenum}}' +
			' 页</span></div>' +
			'<div class="layui-col-md9">' +
			'<div class="right">' +
			'<span class="layui-laypage-limits">' +
			'<select>' +
			'{{#limits}}<option value="{{.}}" {{getSelected}}>{{.}} 条/页</option>{{/limits}}' +
			'</select>' +
			'</span>' +
			'<span class="layui-laypage-skip">' +
			'到第<input type="number" min="1" max="{{pagenum}}" class="layui-input" value="{{curpage}}">页' +
			'<button type="button" class="layui-laypage-btn">确定</button>' +
			'</span>' +
			'<span class="layui-laypage-pages">' +
			'{{#pagenums}}<a class="{{status}} page-item" data-page="{{num}}">{{name}}</a>{{/pagenums}}' +
			'</span>' +
			'</div>' +
			'</div>'
		var _this = this
		var start = para.start || 0;  // 从 0 开始，第几条数据
		var limit = para.limit || 0;  // 每页数据数量
		_this.COUNT = para.count || 0;  // 总数
		_this.MAX_DISPLAY = para.max_display || 0;  // 最大显示页码数量
		//加载分页概览
		var curpage = parseInt(start / limit) + 1; // 当前页数
		if (typeof callback !== 'function') {
			callback = function () { }
		}
        if (_this.LIMITS_FIRST.length === 0) {
            _this.LIMITS_FIRST = setLimits(limit)
        }
		$(el).html(Mustache.render(temp, {
			count: _this.COUNT,
			pagenum: Math.ceil(_this.COUNT / limit),
			limits: _this.LIMITS_FIRST,
            limit: limit,
			pagenums: setPageNums(curpage, limit),
			curpage: _this.COUNT === 0 ? 0 : curpage,
            getSelected: function () {
                if (Number(this) === limit) {
                    return 'selected'
                }
                return ''
            }
		}))

		// 绑定分页点击事件
		$(el + ' .layui-laypage-limits > select').unbind()
		$(el + ' .layui-laypage-limits > select').bind('change', function () {
			var value = Number($(this).val())
			changeData(1, value)
			var temp = '{{#pagenums}}<a class="{{status}} page-item" data-page="{{num}}">{{name}}</a>{{/pagenums}}'
			var pagenum = Math.ceil(_this.COUNT / value)
			$(el + ' .layui-laypage-pages').html(Mustache.render(temp, { pagenums: setPageNums(1, value) }))
			$(el + ' .layui-laypage-count:last-child()').html('共 ' + pagenum + ' 页')
			$(el + ' .layui-laypage-skip > input').attr('max', pagenum)
			bindPageNumsClick()
		})
		bindPageNumsClick()
		// 绑定页码输入/跳转事件
		$(el + ' .layui-laypage-skip > .layui-laypage-btn').unbind()
		$(el + ' .layui-laypage-skip > .layui-laypage-btn').bind('click', function () {
			var val = parseInt(Number($(el + ' .layui-laypage-skip > input').val()))
			var limit = Number($(el + ' .layui-laypage-limits > select').val())
			var lastpage = Number($(el + ' .layui-laypage-pages > .page-item.active').data('page'))
			var pagenum = Math.ceil(_this.COUNT / limit)
			if (_this.COUNT > 0) {
				if (val > pagenum) {
					val = pagenum
				} else if (val <= 0) {
					val = 1
				}
				$(el + ' .layui-laypage-skip > input').val(val)
				if (lastpage !== val) {
					changeData(val, limit)
					var temp = '{{#pagenums}}<a class="{{status}} page-item" data-page="{{num}}">{{name}}</a>{{/pagenums}}'
					$(el + ' .layui-laypage-pages').html(Mustache.render(temp, { pagenums: setPageNums(val, limit) }))
					bindPageNumsClick()
				}
			}
		})

		// 页码数绑定事件
		function bindPageNumsClick() {
			// 绑定页码点击事件
			$(el + ' .layui-laypage-pages > .page-item').unbind()
			$(el + ' .layui-laypage-pages > .page-item').bind('click', function () {
				var clss = $(this).attr('class')
				if (clss.indexOf('disabled') === -1 && clss.indexOf('active') === -1) {
					var lastpage = Number($(el + ' .layui-laypage-pages > .page-item.active').data('page'))
					var thispage = $(this).data('page')
					var limit = Number($(el + ' .layui-laypage-limits > select').val())
					if (thispage === 'prev') {
						thispage = lastpage - 1
						changeData(lastpage - 1, limit)
					} else if (thispage === 'next') {
						thispage = lastpage + 1
					} else {
						thispage = Number(thispage)
					}
					changeData(thispage, limit)
					var temp = '{{#pagenums}}<a class="{{status}} page-item" data-page="{{num}}">{{name}}</a>{{/pagenums}}'
					$(el + ' .layui-laypage-pages').html(Mustache.render(temp, { pagenums: setPageNums(thispage, limit) }))
					bindPageNumsClick()
					$(el + ' .layui-laypage-skip > input').val(thispage)
				}
			})
		}

		// 渲染页码数
		function setPageNums(curpage, limit) {
			var pageNums = []
			var pagenum = Math.ceil(_this.COUNT / limit); // 总页数
			var displayNum = Math.min(pagenum, _this.MAX_DISPLAY);
			var start = curpage - parseInt((displayNum - 1) / 2)
			start = start <= 0 ? 1 : start
			var end = start + displayNum - 1
			end = end > pagenum ? pagenum : end
			if (end === pagenum) {
				start = end - displayNum + 1
			}
			pageNums.push({
				num: 'prev',
				status: curpage === 1 ? 'layui-laypage-prev layui-disabled disabled ' : '',
				name: '上一页'
			})
			if (start - 1 > 0) {
				pageNums.push({
					num: -1,
					status: 'layui-laypage-spr layui-disabled disabled',
					name: '...'
				})
			}
			for (var i = start; i <= end; i++) {
				pageNums.push({
					num: i,
					status: i == curpage ? 'layui-laypage-curr active ' : '',
					name: i
				})
			}
			if (end + 1 <= pagenum) {
				pageNums.push({
					num: -1,
					status: 'layui-laypage-spr layui-disabled disabled',
					name: '...'
				})
			}
			pageNums.push({
				num: 'next',
				status: (curpage === pagenum || pagenum === 0) ? 'layui-laypage-next layui-disabled disabled ' : '',
				name: '下一页'
			})
			return pageNums
		}

		// 渲染分页数
		function setLimits(limit) {
			var limits = []
			for (var i = 1; i <= 10; i++) {
				limits.push(i * limit)
			}
			return limits
		}

		// 绑定页面跳转事件
		function changeData(curpage, limit) {
			var start = (curpage - 1) * limit; // 从 0 开始
			callback(curpage, limit, start)
		}
	}
}



















