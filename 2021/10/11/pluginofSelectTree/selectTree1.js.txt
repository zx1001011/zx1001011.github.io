// 下拉树
var Selectree = function () {
}
Selectree.prototype = {
    /**
     * 下拉树：是否是树、下拉数据、按钮名称、自己属性名称(每个节点的唯一标识)、[辨识父节点属性名称、根节点属性]
     * @param el 例如：'#gatelist_page'
     * @param para  例如：{ 'multi': Boolean, 'data': Array, 'name': String, 'keyName': String, 'parentName': String,  'rootId': String }
     * @param callback  例如： function (item: obj){ //  }
     */
    render: function (el, para, callback) {
        var _this = this
        var temp = '<div class="select-tree input-group input-group-sm col-lg-3 col-sm-3 col-xs-3">{{{getName}}}'+
            '<div class="form-control select-list">'+
            '<div class="input"><span class="fa fa-caret-down"></span></div>'+
            '<div class="list selectree" style="display: none;">{{{getList}}}'+
            '</div>'+
            '</div>'+
            '</div>'
        var treeData = []
        if (!para.name) {
            para.name = ''
        }
        if (!para.multi) {
            para.multi = false
        }
        // 渲染下拉 html
        if (para.multi) {
            var pKey = para.parentName
            var key = para.keyName
            // 需要将 array 的数据转化成 children-parent 的格式
            var traverse = function (id, list) {
                var arr = [];
                for (var i = 0; i < list.length; i++) {
                    if (String(list[i][pKey]) === id) {
                        list[i].children = traverse(String(list[i][key]), list);
                        arr.push(list[i])
                    }
                }
                return arr
            };
            treeData = traverse(para.rootId, para.data);
        }
        var view = Mustache.render(temp, {
            getName: function () {
                if (para.name.length > 0) {
                    return '<span class="input-group-btn"><span class="btn choose-gate-Adapter disabled opacity-1">' + para.name + '</span></span>'
                }
                return ''
            },
            getList: function () {
                if (para.multi) {
                    var tmp = '';
                    var ren = function (list) {
                        var temp = '<div class="list-item">'+
                            '<span class="fa {{downClass}}"></span>'+
                            '<span class="item-name" data-name="{{name}}" data-id="{{id}}"><span class="fa {{fileClass}}"></span>{{name}}</span>'+
                            '<div class="list-children" style="display: none;">'+
                            '<div class="list">'
                        var view = ''
                        for (var i = 0; i < list.length; i++) {
                            var hasChild = false
                            var item = list[i]
                            var itemView = ''
                            if (item.children && item.children.length > 0) {
                                hasChild = true
                            }
                            itemView = Mustache.render(temp, {
                                name: item.name,
                                id: item[para.keyName],
                                downClass: function () {
                                    if (hasChild) {
                                        return 'fa-angle-right'  // 展开 'fa-angle-down'
                                    }
                                    return ''
                                },
                                fileClass: function () {
                                    if (hasChild) {
                                        return 'fa-folder-o'  // 展开 'fa-folder-open-o'
                                    }
                                    return 'fa-file'
                                }
                            })
                            view += itemView
                            if (hasChild) {
                                view += ren(item.children)
                            }
                            view += '</div>'+
                                '</div>'+
                                '</div>';
                        }
                        return view
                    };
                    tmp += ren(treeData)
                    return tmp
                } else {
                    var tmp = '';
                    for (var i = 0; i < para.data.length; i++) {
                        tmp += '<li class="list-item" data-id="'+ para.data[i][para.keyName] +'">' + para.data[i].name + '</li>'
                    }
                    return tmp
                }
            }
        })
        $(el).html(view)

        // 绑定点击显示与隐藏事件
        $(el + ' .select-tree .input').unbind()
        $(el + ' .select-tree .input').bind('click', function () {
            $(el + ' .select-tree .selectree').show()
        });
        $(document).click(function (e) {
            if (!(e.target === $(el + ' .select-tree .selectree')[0] ||
                e.target === $(el + ' .select-tree .input')[0] ||
                e.target.className.indexOf('list-item') !== -1 ||
                e.target.className.indexOf('fa') !== -1 ||
                e.target.className.indexOf('item-name') !== -1 ||
                e.target.className.indexOf('list-children') !== -1)) {
                $(el + ' .select-tree .selectree').hide()
            }
        })
        iconShowClick();
        iconHideClick();
        function iconShowClick() {
            $(el + ' .selectree .list-item .fa-angle-right').unbind()
            $(el + ' .selectree .list-item .fa-angle-right').bind('click', function () {
                $(this).nextAll('.list-children').show()
                $(this).next().children().removeClass('fa-folder-o')
                $(this).next().children().addClass('fa-folder-open-o')
                $(this).removeClass('fa-angle-right')
                $(this).addClass('fa-angle-down')
                iconHideClick()
            })
        }
        function iconHideClick() {
            $(el + ' .selectree .list-item .fa-angle-down').unbind()
            $(el + ' .selectree .list-item .fa-angle-down').bind('click', function () {
                $(this).nextAll('.list-children').hide()
                $(this).next().children().addClass('fa-folder-o')
                $(this).next().children().removeClass('fa-folder-open-o')
                $(this).removeClass('fa-angle-down')
                $(this).addClass('fa-angle-right')
                iconShowClick()
            })
        }

        // 绑定选择点击事件： 回显
        if (para.multi) {
            $(el + ' .selectree .list-item .item-name').unbind()
            $(el + ' .selectree .list-item .item-name').bind('click', function () {
                var id = $(this).data('id');
                var selectItem = null;
                $(el + ' .select-tree .input').html($(this).data('name') + '<span class="fa fa-caret-down"></span>')
                for (var i = 0; i < para.data.length; i++) {
                    console.log(para.data[i])
                    if (String(para.data[i][para.keyName]) === String(id)) {
                        selectItem = para.data[i]
                        break
                    }
                }
                callback(selectItem)
            })
        } else {
            $(el + ' .selectree .list-item').unbind()
            $(el + ' .selectree .list-item').bind('click', function () {
                var id = $(this).data('id');
                var selectItem = null;
                $(el + ' .select-tree .input').html($(this).html() + '<span class="fa fa-caret-down"></span>')
                for (var i = 0; i < para.data.length; i++) {
                    if (String(para.data[i][para.keyName]) === String(id)) {
                        selectItem = para.data[i]
                        break
                    }
                }
                callback(selectItem)
            })
        }

        // 回调函数
    }
}